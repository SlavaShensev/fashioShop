@function em($pixels, $context: $base-font-size) {
  @return #{$pixels/$context}em;
}


@mixin font-face($font-family, $file-path, $weight: normal, $style: normal, $asset-pipeline: false, $display: swap ) {
  @font-face {
    font-family: $font-family;
    font-weight: $weight;
    font-style: $style;
    font-display: $display;

    @if $asset-pipeline == true {
      src: font-url('#{$file-path}.eot');
      src: font-url('#{$file-path}.eot?#iefix') format('embedded-opentype'), font-url('#{$file-path}.woff') format('woff'), font-url('#{$file-path}.ttf') format('truetype');
    } @else {
      src: url('#{$file-path}.eot');
      src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'), url('#{$file-path}.woff') format('woff'), url('#{$file-path}.ttf') format('truetype');
    }
  }
}

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content
  }
  &:-moz-placeholder {
    @content
  }
  &::-moz-placeholder {
    @content
  }
  &:-ms-input-placeholder {
    @content
  }
}

//
// Mixins
// --------------------------------------------------

@mixin mobile-only {
  @media screen and (max-width: 767px) {
    @content;
  }
}

@mixin tablet-only {
  @media screen and (min-width: #{$tabletWidth}) and (max-width: 1023px) {
    @content;
  }
}

@mixin tablet {
  @media screen and (max-width: 1023px) {
    @content;
  }
}

@mixin desktop {
  @media screen and (min-width: #{$desktopWidth}) {
    @content;
  }
}

// https://css-tricks.com/snippets/css/less-mixin-for-rem-font-sizing/
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@mixin rem($property, $values...) {
  $max: length($values);
  $pxValues: "";
  $remValues: "";
  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $pxValues: #{$pxValues + $value * 10}px;
    @if $i < $max {
      $pxValues: #{$pxValues + " "};
    }
  }
  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $remValues: #{$remValues + $value}rem;
    @if $i < $max {
      $remValues: #{$remValues + " "};
    }
  }
  #{$property}: $pxValues;
  #{$property}: $remValues;
}

// Hide text
@mixin hide-text($height: 1em) {
  height: $height;
  line-height: 1.5;
  overflow: hidden;
  &::before {
    content: "";
    display: block;
    width: 0;
    height: 100%;
  }
}

// Clearfix
@mixin clearfix {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin ie-min-height {
  &:after {
    content: '';
    min-height: inherit;
    font-size: 0;
  }
}

// Text overflow
// Requires inline-block or block for proper styling
@mixin text-overflow {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Resize anything
@mixin resizable($direction) {
  resize: $direction; // Options: horizontal, vertical, both
  overflow: auto; // Safari fix
}

@mixin line-break {
  -ms-word-break: break-all;
  word-break: break-all;
  word-break: break-word; // <== Non standard for webkit
  @include hyphens;
}
